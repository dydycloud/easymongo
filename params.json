{"name":"easymongo","tagline":"Simple interface for MongoDB","body":"This is a small extension for quick work with [MongoDB native driver](https://github.com/mongodb/node-mongodb-native).\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install easymongo\r\n```\r\n\r\n## Examples\r\n\r\n```js\r\nvar EasyMongo = require('easymongo');\r\nvar mongo = new EasyMongo({dbname: 'test'});\r\n\r\nvar data = {name: 'Alexey', surname: 'Simonenko', url: 'http://simonenko.su'};\r\nmongo.save('users', data, function(error, results) {\r\n  // Returns a new document (array).\r\n  console.log(results);\r\n});\r\n\r\nmongo.find('users', {name: 'Alexey'}, {limit: 1}, function(error, results) {\r\n  // Always return array of documents.\r\n  console.log(results);\r\n});\r\n\r\nmongo.findById('users', '4e4e1638c85e808431000003', function(error, results) {\r\n  // Returns a document (object). If error occur then returns false.\r\n  console.log(results);\r\n});\r\n\r\nmongo.count('users', {name: 'Alexey'}, function(error, results) {\r\n  // Amount (int). If error occur then returns zero.\r\n  console.log(results);\r\n});\r\n\r\nmongo.remove('users', {name: 'Alexey'}, function(error, results) {\r\n  // Returns a result of operation (boolean). If error occur then returns false.\r\n  console.log(results);\r\n});\r\n\r\nmongo.removeById('users', '4e4e1638c85e808431000003', function(error, results) {\r\n  // Returns a result of operation (boolean). If error occur then returns false.\r\n  console.log(results);\r\n});\r\n```\r\n\r\n## API\r\n\r\n#### Constructor\r\n\r\nArguments:\r\n\r\n  * server (string || object) — [connection url](http://docs.mongodb.org/manual/reference/connection-string/) to MongoDB or object with host, port and dbname\r\n  * options (object) — [optional options](http://mongodb.github.io/node-mongodb-native/api-generated/mongoclient.html#connect) for insert command\r\n\r\n#### Methods\r\n\r\n* find (collection[, params][, options][, callback])\r\n* findById (collection, id[, callback])\r\n* save (collection, params[, callback])\r\n* remove (collection[, params][, callback])\r\n* removeById (collection, id[, callback])\r\n* count (collection[, params][, callback])\r\n* collection (collection, callback)\r\n* close ()\r\n\r\n## Author\r\n\r\n* [Alexey Simonenko](mailto:alexey@simonenko.su), [simonenko.su](http://simonenko.su)\r\n\r\n## License\r\n\r\nThe MIT License, see the included `license.md` file.","google":"UA-37507032-2","note":"Don't delete this file! It's used internally to help with page regeneration."}