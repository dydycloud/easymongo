{"name":"easymongo","tagline":"Simple interface for the MongoDB API","body":"[![NPM version](https://badge.fury.io/js/easymongo.png)](http://badge.fury.io/js/easymongo) [![Build Status](https://travis-ci.org/meritt/easymongo.png?branch=master)](https://travis-ci.org/meritt/easymongo) [![Coverage Status](https://coveralls.io/repos/meritt/easymongo/badge.png)](https://coveralls.io/r/meritt/easymongo) [![Dependency Status](https://david-dm.org/meritt/easymongo.png)](https://david-dm.org/meritt/easymongo) [![devDependency Status](https://david-dm.org/meritt/easymongo/dev-status.png)](https://david-dm.org/meritt/easymongo#info=devDependencies)\r\n\r\nThis is a small tweaks for the [native MongoDB driver](https://github.com/mongodb/node-mongodb-native).\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install easymongo\r\n```\r\n\r\n## Examples\r\n\r\n```js\r\nvar options = {\r\n  dbname: 'test'\r\n};\r\n\r\nvar mongo = new require('easymongo')(options);\r\nvar users = mongo.collection('users');\r\n\r\nvar data = {name: 'Alexey', surname: 'Simonenko', url: 'http://simonenko.su'};\r\nusers.save(data, function(error, results) {\r\n  // Returns a new document (array).\r\n  console.log(results);\r\n});\r\n\r\nusers.find({name: 'Alexey'}, {limit: 1}, function(error, results) {\r\n  // Always return array of documents.\r\n  console.log(results);\r\n});\r\n\r\nusers.findById('4e4e1638c85e808431000003', function(error, results) {\r\n  // Returns a document (object). If error occur then returns false.\r\n  console.log(results);\r\n});\r\n\r\nusers.count({name: 'Alexey'}, function(error, results) {\r\n  // Amount (int). If error occur then returns zero.\r\n  console.log(results);\r\n});\r\n\r\nusers.remove({name: 'Alexey'}, function(error, results) {\r\n  // Returns a result of operation (boolean). If error occur then returns false.\r\n  console.log(results);\r\n});\r\n\r\nusers.removeById('4e4e1638c85e808431000003', function(error, results) {\r\n  // Returns a result of operation (boolean). If error occur then returns false.\r\n  console.log(results);\r\n});\r\n```\r\n\r\n## API\r\n\r\n### Client class\r\n\r\n#### Constructor\r\n\r\nArguments:\r\n\r\n  * server (string || object) — [connection url](http://docs.mongodb.org/manual/reference/connection-string/) to MongoDB or object with host, port and dbname\r\n  * options (object) — [optional options](http://mongodb.github.io/node-mongodb-native/api-generated/mongoclient.html#connect) for insert command\r\n\r\n#### Methods\r\n\r\n* collection (name) — returns a new instance of the easymongo [Collection class](#collection-class)\r\n* open (name[, callback]) — returns the [MongoDB Collection](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html)\r\n* close — close the db connection\r\n\r\n### Collection class\r\n\r\n#### Methods\r\n\r\n* find ([params][, options][, callback])\r\n* findById (oid[, callback])\r\n* save (params[, callback])\r\n* remove ([params][, callback])\r\n* removeById (oid[, callback])\r\n* count ([params][, callback])\r\n\r\n## Flow control\r\n\r\nYou can use `easymongo` with [co](https://github.com/visionmedia/co) for generator based flow-control. For these purposes use the [co-easymongo](https://github.com/yamb/co-easymongo).\r\n\r\n## Author\r\n\r\n* [Alexey Simonenko](mailto:alexey@simonenko.su), [simonenko.su](http://simonenko.su)\r\n\r\n## License\r\n\r\nThe MIT License, see the included `license.md` file.\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/meritt/easymongo/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")","google":"UA-37507032-2","note":"Don't delete this file! It's used internally to help with page regeneration."}